<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nhky.icCardConsume.dao.ConsumeDao">
    <!--
 * Created by IntelliJ IDEA.
 * User: 波罗的海
 * Date: 2021/12/4
 * Time: 22:25
-->

<!--    # 查询商品类型-->
<!--    SELECT id ,type_name AS `name` FROM `ic_util_goods_type`-->

<!--    #查询商品-->
    <select id="getGoods" resultType="com.nhky.pojo.GoodsVO">
            SELECT `goods_name` AS goodsName,
            `id` AS goodsId,
            `icon` AS goodsIcon,
            `unit_price` AS goodsPrice,
            `extant` AS goodsExtant,
            `inventory` AS goodsInventory,
            `discount` AS goodsDiscount,
            `title` AS goodsTitle,
            `description` AS goodsDescription,
            `is_special` AS goodsIsSpecial,
            `mark` AS goodsMark,
            (SELECT `type_name` FROM `ic_util_goods_type` WHERE `id` = isg.`goods_class`) AS goodsClass,
            (SELECT `id` FROM `ic_shopping_util_price` WHERE `id` = isg.`util`) AS goodsUtil
            FROM `ic_shopping_goods` AS isg
            WHERE
            isg.`extant` &gt; 0
            <if test="key != null and key !=''">
                AND (isg.`title` LIKE CONCAT('%',#{key},'%') OR isg.`description` LIKE CONCAT('%',#{key},'%') )
            </if>
            <if test="beginPrice != null and beginPrice >=0">
                    AND isg.`unit_price` &gt;= #{beginPrice}
            </if>
            <if test="endPrice != null and endPrice >=0">
                    AND isg.`unit_price` &lt;= #{endPrice}
            </if>
            <if test="typeName != null and typeName !=''">
                AND isg.`goods_class` IN (SELECT `id` FROM `ic_util_goods_type` WHERE `type_name` = #{typeName})
            </if>
            ORDER BY isg.`unit_price`
            <if test="order != null and order == '2'.toString()">
                 asc
            </if>
            limit #{off},#{end}
    </select>

        <select id="getHotGoods" resultType="com.nhky.pojo.HotGoodsVO" parameterType="java.lang.Integer">
                  SELECT
                    `id` AS goodsId,
                    `goods_name` AS goodsName,
                    `icon` AS goodsIcon,
                    `unit_price` AS goodsPrice,
                    `extant` AS goodsExtant,
                    `inventory` AS goodsInventory,
                    `discount` AS goodsDiscount,
                    `title` AS goodsTitle,
                    `description` AS goodsDescription,
                    `is_special` AS goodsIsSpecial,
                    `mark` AS goodsMark,
                    (SELECT `type_name` FROM `ic_util_goods_type` WHERE `id` = isg.`goods_class`) AS goodsClass,
                    (SELECT `id` FROM `ic_shopping_util_price` WHERE `id` = isg.`util`) AS goodsUtil,
                    (CAST(isg.`inventory` AS SIGNED) - CAST(isg.`extant` AS SIGNED)) AS goodsCellNum
                   FROM `ic_shopping_goods` AS isg
                   WHERE `extant` > 0
                   ORDER BY goodsCellNum DESC
                   LIMIT #{off},#{end}
        </select>

<!--    //获取商品列表-->
    <select id="getTypeNameList" resultType="map">
           SELECT id AS typeId,`description` AS typeDesc,`icon` AS typeIcon,`type_name` AS typeName
                FROM `ic_util_goods_type` WHERE `status` = 1
    </select>

<!--    //根据商品id获取商品信息，用于下单页-->
<!--    public GoodsVO getGoodsById(@Param("gid") Long gid);-->
    <select id="getGoodsById" resultType="com.nhky.pojo.GoodsVO" parameterType="java.lang.Long">
        SELECT
            `id` AS goodsId,
            `goods_name` AS goodsName,
            `icon` AS goodsIcon,
            `unit_price` AS goodsPrice,
            `extant` AS goodsExtant,
            `inventory` AS goodsInventory,
            `discount` AS goodsDiscount,
            `title` AS goodsTitle,
            `description` AS goodsDescription,
            `is_special` AS goodsIsSpecial,
            `mark` AS goodsMark,
            (SELECT `type_name` FROM `ic_util_goods_type` WHERE `id` = isg.`goods_class`) AS goodsClass,
            (SELECT `until` FROM `ic_shopping_util_price` WHERE `id` = isg.`util`) AS goodsUtil,
            (CAST(isg.`inventory` AS SIGNED) - CAST(isg.`extant` AS SIGNED)) AS goodsCellNum
           FROM `ic_shopping_goods` AS isg
           WHERE `id` = #{gid} AND `status`=1
    </select>

    <select id="getBalance" resultType="map" parameterType="java.lang.Long">
        SELECT
            icem.`blance` AS cardBalance,
            icem.`card_type_type` AS cardType,
            icem.`id` AS cardId,
            imu.`easy_id` AS uId,
            imu.`name` AS uName,
            imu.`identify_card` AS uIdentify,
            imu.`phone` AS uPhone,
            imu.`email` AS uEmail,
            imu.`head_url` AS uHeadUrl,
            imu.`single` AS uSingle,
            imu.`register_identify` AS uRegisterIdentify,
            imu.`money_balance` AS uBalance
        FROM `ic_card_easy_msg` AS icem
        LEFT JOIN `ic_main_user` AS imu ON imu.`easy_id` = #{uid}
        WHERE icem.`id` IN (SELECT `card_id` FROM `ic_card_msg` WHERE `user_id` = #{uid}) AND icem.`card_status` = 1
    </select>

<!--    //下单-->
<!--    //（1）验证密码-->
<!--    public Integer verifyPaymentPassword(@Param("uid")Long uid,@Param("pwd")String pwd);-->
    <select id="verifyPaymentPassword" resultType="java.lang.Integer">
        SELECT COUNT(id) FROM `ic_shopping_verify` WHERE `easy_id` = #{uid} AND `pwd` = #{pwd} AND `status` = 1
    </select>
<!--    // (2)确认订单库存足够且账户余额充足时修改商品表库存-->
<!--    public Integer modifyGoodsExtent(@Param("buyNum")Integer buyNum,//购买数量-->
<!--    @Param("gid") Long gid,//商品id-->
<!--    @Param("uid") Long uid);//用户id-->
    <update id="modifyGoodsExtent">
        UPDATE `ic_shopping_goods` AS isg SET isg.`extant` = isg.`extant` - #{buyNum} WHERE
            isg.`extant` > #{buyNum} - 1
            AND
            (
                (
                    SELECT `blance` FROM `ic_card_easy_msg` WHERE
                    `id` IN ( SELECT `card_id` FROM `ic_card_msg` WHERE `user_id` = #{uid})
                    AND `card_status` = 1
                )
                >=
                (
                    isg.`unit_price` * #{buyNum}
                )
            )
            AND
            isg.`id` = #{gid}
    </update>
    <select id="getExtent" parameterType="java.lang.Long" resultType="java.lang.Integer">
        select `extant` from `ic_shopping_goods` where `id` = #{gid}
    </select>
<!--    //(3)添加商品购买记录-->
<!--    public Integer addPaymentHistory();-->
    <insert id="addPaymentHistory" parameterType="com.nhky.pojo.ShoppingHistory">
        INSERT INTO `ic_shopping_goods_tag`
        (`goods_id`,`card_id`,`shopping_time`,`shopping_money`,`shopping_user`,`mark`)
        VALUES
        (
            #{goods_id},
            (SELECT `id` FROM `ic_card_easy_msg` WHERE
                    `id` IN ( SELECT `card_id` FROM `ic_card_msg` WHERE `user_id` = #{shopping_user})
                    AND `card_status` = 1),
            NOW(),
            #{shopping_money},
            #{shopping_user},
            #{mark}
        )
    </insert>
<!--    //(4))修改IC卡余额-->
<!--    public Integer updateBalance();-->
    <update id="updateBalance">
        UPDATE `ic_card_easy_msg` AS icem SET icem.`blance` = (icem.`blance` - #{money})
          WHERE icem.`id` IN ( SELECT `card_id` FROM `ic_card_msg` WHERE `user_id` = #{uid})
          AND `card_status` = 1
    </update>
<!--    //添加ic卡余额变更记录-->
<!--    public Integer addICBalanceHistory();-->
    <insert id="addICBalanceHistory" parameterType="com.nhky.pojo.CardRechargeVO">
        INSERT INTO `ic_recharge_node`
            (`recharge_money`,`recharge_time`,`blance`,`note`,`status`)
            VALUES
            (
                #{recharge_money},
                NOW(),
                (SELECT `blance` FROM `ic_card_easy_msg` WHERE `id` IN (
                    SELECT `card_id` FROM `ic_card_msg` WHERE `user_id` = #{cid}) AND `card_status` = 1),
                #{note},
                0
            )
    </insert>

    <!--    //添加充值记录子表信息-->
    <insert id="addICSubHistory">
            INSERT INTO `ic_recharge_record`
            (`recharge_id`,`card_id`,`user_id`,`status`)
            VALUES
            (
                #{rid},
                (SELECT `blance` FROM `ic_card_easy_msg` WHERE `id` IN (
                        SELECT `card_id` FROM `ic_card_msg` WHERE `user_id` = #{uid}) AND `card_status` = 1),
                #{uid},
                1
            )
    </insert>
</mapper>